<?php

namespace Proxies\__CG__\ActiviteBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ActiviteRealisee extends \ActiviteBundle\Entity\ActiviteRealisee implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = ['activite' => NULL];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {
        unset($this->activite);

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * 
     * @param string $name
     */
    public function __get($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);

            return $this->$name;
        }

        trigger_error(sprintf('Undefined property: %s::$%s', __CLASS__, $name), E_USER_NOTICE);
    }

    /**
     * 
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

            $this->$name = $value;

            return;
        }

        $this->$name = $value;
    }

    /**
     * 
     * @param  string $name
     * @return boolean
     */
    public function __isset($name)
    {
        if (array_key_exists($name, $this->__getLazyProperties())) {
            $this->__initializer__ && $this->__initializer__->__invoke($this, '__isset', [$name]);

            return isset($this->$name);
        }

        return false;
    }

    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'id', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'heureDebut', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'heureFin', 'activite', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'ressources', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'enfant', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'jour'];
        }

        return ['__isInitialized__', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'id', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'heureDebut', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'heureFin', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'ressources', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'enfant', '' . "\0" . 'ActiviteBundle\\Entity\\ActiviteRealisee' . "\0" . 'jour'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ActiviteRealisee $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

            unset($this->activite);
        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeureDebut($heureDebut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeureDebut', [$heureDebut]);

        return parent::setHeureDebut($heureDebut);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeureDebut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeureDebut', []);

        return parent::getHeureDebut();
    }

    /**
     * {@inheritDoc}
     */
    public function setHeureFin($heureFin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHeureFin', [$heureFin]);

        return parent::setHeureFin($heureFin);
    }

    /**
     * {@inheritDoc}
     */
    public function getHeureFin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHeureFin', []);

        return parent::getHeureFin();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setActivite(\ActiviteBundle\Entity\Activite $activite = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setActivite', [$activite]);

        return parent::setActivite($activite);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivite', []);

        return parent::getActivite();
    }

    /**
     * {@inheritDoc}
     */
    public function addRessource(\RessourceBundle\Entity\Ressource $ressource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRessource', [$ressource]);

        return parent::addRessource($ressource);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRessource(\RessourceBundle\Entity\Ressource $ressource)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRessource', [$ressource]);

        return parent::removeRessource($ressource);
    }

    /**
     * {@inheritDoc}
     */
    public function getRessources()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRessources', []);

        return parent::getRessources();
    }

    /**
     * {@inheritDoc}
     */
    public function isValidHeure()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isValidHeure', []);

        return parent::isValidHeure();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnfant(\RessourceBundle\Entity\Enfant $enfant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnfant', [$enfant]);

        return parent::setEnfant($enfant);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnfant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnfant', []);

        return parent::getEnfant();
    }

    /**
     * {@inheritDoc}
     */
    public function setJour(\ActiviteBundle\Entity\Jour $jour)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJour', [$jour]);

        return parent::setJour($jour);
    }

    /**
     * {@inheritDoc}
     */
    public function getJour()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJour', []);

        return parent::getJour();
    }

    /**
     * {@inheritDoc}
     */
    public function toArray()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toArray', []);

        return parent::toArray();
    }

}
