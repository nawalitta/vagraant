<?php

namespace Proxies\__CG__\RessourceBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Enfant extends \RessourceBundle\Entity\Enfant implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'id', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'prenom', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'nom', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'estArchive', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'dateArrive', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'regime', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'identifiant', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'fenetreHoraire', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'groupe', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'activitesOptionelles', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'activitesFixees', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'activitesRealisees', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'activitesObligatoires', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'preAffections', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'evenements'];
        }

        return ['__isInitialized__', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'id', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'prenom', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'nom', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'estArchive', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'dateArrive', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'regime', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'identifiant', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'fenetreHoraire', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'groupe', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'activitesOptionelles', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'activitesFixees', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'activitesRealisees', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'activitesObligatoires', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'preAffections', '' . "\0" . 'RessourceBundle\\Entity\\Enfant' . "\0" . 'evenements'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Enfant $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrenom($prenom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrenom', [$prenom]);

        return parent::setPrenom($prenom);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrenom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrenom', []);

        return parent::getPrenom();
    }

    /**
     * {@inheritDoc}
     */
    public function setNom($nom)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNom', [$nom]);

        return parent::setNom($nom);
    }

    /**
     * {@inheritDoc}
     */
    public function getNom()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNom', []);

        return parent::getNom();
    }

    /**
     * {@inheritDoc}
     */
    public function setEstArchive($estArchive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEstArchive', [$estArchive]);

        return parent::setEstArchive($estArchive);
    }

    /**
     * {@inheritDoc}
     */
    public function getEstArchive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEstArchive', []);

        return parent::getEstArchive();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateArrive($dateArrive)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateArrive', [$dateArrive]);

        return parent::setDateArrive($dateArrive);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateArrive()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateArrive', []);

        return parent::getDateArrive();
    }

    /**
     * {@inheritDoc}
     */
    public function setRegime($regime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRegime', [$regime]);

        return parent::setRegime($regime);
    }

    /**
     * {@inheritDoc}
     */
    public function getRegime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRegime', []);

        return parent::getRegime();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdentifiant($identifiant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdentifiant', [$identifiant]);

        return parent::setIdentifiant($identifiant);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdentifiant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdentifiant', []);

        return parent::getIdentifiant();
    }

    /**
     * {@inheritDoc}
     */
    public function __toString()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, '__toString', []);

        return parent::__toString();
    }

    /**
     * {@inheritDoc}
     */
    public function setFenetreHoraire(\RessourceBundle\Entity\FenetreHoraire $fenetreHoraire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFenetreHoraire', [$fenetreHoraire]);

        return parent::setFenetreHoraire($fenetreHoraire);
    }

    /**
     * {@inheritDoc}
     */
    public function getFenetreHoraire()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFenetreHoraire', []);

        return parent::getFenetreHoraire();
    }

    /**
     * {@inheritDoc}
     */
    public function setGroupe(\RessourceBundle\Entity\Groupe $groupe)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGroupe', [$groupe]);

        return parent::setGroupe($groupe);
    }

    /**
     * {@inheritDoc}
     */
    public function getGroupe()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGroupe', []);

        return parent::getGroupe();
    }

    /**
     * {@inheritDoc}
     */
    public function addActivitesFixee(\ActiviteBundle\Entity\ActiviteFixee $activitesFixee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addActivitesFixee', [$activitesFixee]);

        return parent::addActivitesFixee($activitesFixee);
    }

    /**
     * {@inheritDoc}
     */
    public function removeActivitesFixee(\ActiviteBundle\Entity\ActiviteFixee $activitesFixee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeActivitesFixee', [$activitesFixee]);

        return parent::removeActivitesFixee($activitesFixee);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivitesFixees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivitesFixees', []);

        return parent::getActivitesFixees();
    }

    /**
     * {@inheritDoc}
     */
    public function addActivitesOptionelle(\ActiviteBundle\Entity\Activite $activitesOptionelle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addActivitesOptionelle', [$activitesOptionelle]);

        return parent::addActivitesOptionelle($activitesOptionelle);
    }

    /**
     * {@inheritDoc}
     */
    public function removeActivitesOptionelle(\ActiviteBundle\Entity\Activite $activitesOptionelle)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeActivitesOptionelle', [$activitesOptionelle]);

        return parent::removeActivitesOptionelle($activitesOptionelle);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivitesOptionelles()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivitesOptionelles', []);

        return parent::getActivitesOptionelles();
    }

    /**
     * {@inheritDoc}
     */
    public function addActivitesObligatoire(\ActiviteBundle\Entity\ActiviteObligatoire $activitesObligatoire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addActivitesObligatoire', [$activitesObligatoire]);

        return parent::addActivitesObligatoire($activitesObligatoire);
    }

    /**
     * {@inheritDoc}
     */
    public function removeActivitesObligatoire(\ActiviteBundle\Entity\ActiviteObligatoire $activitesObligatoire)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeActivitesObligatoire', [$activitesObligatoire]);

        return parent::removeActivitesObligatoire($activitesObligatoire);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivitesObligatoires()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivitesObligatoires', []);

        return parent::getActivitesObligatoires();
    }

    /**
     * {@inheritDoc}
     */
    public function addPreaffection(\RessourceBundle\Entity\Preaffection $preaffection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addPreaffection', [$preaffection]);

        return parent::addPreaffection($preaffection);
    }

    /**
     * {@inheritDoc}
     */
    public function removePreaffection(\RessourceBundle\Entity\Preaffection $preaffection)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removePreaffection', [$preaffection]);

        return parent::removePreaffection($preaffection);
    }

    /**
     * {@inheritDoc}
     */
    public function getPreaffection()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreaffection', []);

        return parent::getPreaffection();
    }

    /**
     * {@inheritDoc}
     */
    public function addActivitesRealisee(\ActiviteBundle\Entity\ActiviteRealisee $activitesRealisee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addActivitesRealisee', [$activitesRealisee]);

        return parent::addActivitesRealisee($activitesRealisee);
    }

    /**
     * {@inheritDoc}
     */
    public function removeActivitesRealisee(\ActiviteBundle\Entity\ActiviteRealisee $activitesRealisee)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeActivitesRealisee', [$activitesRealisee]);

        return parent::removeActivitesRealisee($activitesRealisee);
    }

    /**
     * {@inheritDoc}
     */
    public function getActivitesRealisees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getActivitesRealisees', []);

        return parent::getActivitesRealisees();
    }

    /**
     * {@inheritDoc}
     */
    public function getPreAffections()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreAffections', []);

        return parent::getPreAffections();
    }

    /**
     * {@inheritDoc}
     */
    public function addEvenement(\CalendarBundle\Entity\EventEntity $evenement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addEvenement', [$evenement]);

        return parent::addEvenement($evenement);
    }

    /**
     * {@inheritDoc}
     */
    public function removeEvenement(\CalendarBundle\Entity\EventEntity $evenement)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeEvenement', [$evenement]);

        return parent::removeEvenement($evenement);
    }

    /**
     * {@inheritDoc}
     */
    public function getEvenements()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEvenements', []);

        return parent::getEvenements();
    }

}
